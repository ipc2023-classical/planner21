# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: build

%files
    src 
    driver
    build_configs.py
    build.py
    fast-downward.py

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install --no-install-recommends cmake python3 make g++ pypy3

    ## Clear local build directories.
    rm -rf /builds
    
    ## Build the planner
    pypy3 build.py
    strip --strip-all builds/release/bin/downward builds/release/bin/preprocess-h2


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build
    fast-downward.py
    builds/release/bin/
    driver

%post
    ## Install only dependencies for running the planner.
    apt-get update
    apt-get -y install --no-install-recommends pypy3
    apt-get clean
    ## Remove unnecessary files to keep the image small.
    rm -rf /var/lib/apt/lists/*


# The runscript is called whenever the container is used to solve an instance.
%runscript
    DOMAINFILE="$1"
    PROBLEMFILE="$2"
    PLANFILE="$3"

    pypy3 /fast-downward.py \
        --plan-file "$PLANFILE" \
        "$DOMAINFILE" \
        "$PROBLEMFILE" \
        --search "astar(operatorcounting([pho_abstraction_constraints([projections(sys_scp(max_time=100,max_time_per_restart=10)),cartesian()],strategy=max_cluster)],cache_lp=true))"

## Define meta data
%labels
Name        SPhO with selective LP recalculation
Description forward search with A* and the Saturated Post-Hoc optimization heuristic that selectively reuses previous SPhO LP solutions.
Authors     Paul HÃ¶ft <paul.hoft@liu.se>, Jendrik Seipp <jendrik.seipp@liu.se>, David Speck <david.speck@liu.se>
License     GPL 3
Tracks      optimal
SupportsDerivedPredicates                       no
SupportsUniversallyQuantifiedPreconditions      no
SupportsExistentiallyQuantifiedPreconditions    no
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
